<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAIAAABt+uBvAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAACB5JREFUeF7tm1tsVFUYhc97OwO9KJAIFE0wVi5tQURbKmIFoZSWitFwESuIQCv3
        SxGEAqU3rGLBYkkrtZWaRkIxRZAQqGZIJJEUlfjklT4IT0JCoo/478vZc84+Z59pITDroX/WQ2emdK18
        a585Mwm/1dfXt+7kgRG187mKmGqKhjMV2po3vJppmFBVgdLD++ZGVZkv9FDlHKa9QrNTSXtIL9malbKb
        iX4e8cGCtJZlaa3L7wCPtf3UJ1E0tf5obDpRNMOqHGj2+aNhdNxoUjkarpkpFUzD6+antbwps7gHpDlr
        7IcL/dAUutE47R3etr3b22vvgyal4sXkXUyjGl8XRLQBac5i9veOxmGvNxP1nmWjmSnQcOWFS6cKItqA
        NGcFHVpTM9zbY+9zaL32TjSkpJ15oRVTBBFtQJojQL72yluz90dj2wehUc0oNEk7XyCFlk0WRLQBaY4D
        uotmpLfXPjYaJ52k92aESiYJItpE6cS1OWvAaBz2Az20GhqhxKVZgog2IM1Z0nuAzdzdobW9JZ2hpB0z
        EpdkCiLagDRHgJS3Zi/RZB0sKWrfWtQmVdi2NbPhDVMzmQeWzGvdRCo4KrTR5W3bCzRDdzxPMgECac7y
        83Y1Q4BEYjUX//rJ1/vRmuK+mzfkL/Gp6WnTmnGiGbqdND1xcYb8bfeANMcAObwlGkVHNFP33ecitJqy
        r963vZm9aKa2p02+zOfazRtpVYXc22nP0TA604WMgDCasxz2Pmjo0JIeq1ugGdBDJxo6rmOq59/677Z8
        mc+ijp3aodXQDHmX9FwAIEe2uDUnAPmiIUUv6SWdu8VfV1N2cj+3l9fz4e9PyBf4XPzzRz80tj1Dw+gE
        AHLQ8Y33gJqzXN4Oe+89kg6wMBBDUQQaUsaHi+SzfCjQxPqFzN6LxrZn2sYUCCj+zTFAgWiil3TmR/q3
        ytKu/eJG0HHlrHyKT82FzwKaUWiYynONgDCas5zetr2ORh3a2m/1i5ne6go+3SAf87l287oXDW+Geys6
        5blMW4MABaKJxruvzVkGex2NOLR0PRMUYSZm9Yk6OrTyAZ+5LetdzTBvzZ6jYXSmkUyAQJojQJ5mot4+
        nzsXf7FL+InR3v+O9X4T2IwLDSm8xQwIoznL99A67RUacWipGc1YDcEavXeuAU20GYUmvCWHZAYE0RwB
        MqLRvsupT1a5jSuEqzbbvj7E7L3NCG9lz9BwOpuZTIBAmiNAsdE46Yh7ZMQvCoWI0YwbTXhzdnhTthkQ
        RHOW7T2Ar7l0MQtjbarPH/VD425GoskhNELJeU/If+8ekOYEoJhoop87R1cW0O1AGHsnp2FZtBnPodXQ
        hDc+SzIBstHEuTnLtjd42/bq40PNhVbhKubnv3+VP/GJ/H7Ftjc2w9FIOuENwYBiornvzREg5e21d6Eh
        TTv0lvATc+2f66P25Ef+uCIf8ynvbnDZm9GENjxDMgLCaM4yoPGhQ+9zmuuqL6uplvwja+VjPnTLGLlr
        tsNbb4a8JZ31TGZACo033oNrjgD1Cw2p5ryrIgqhDi31I5/lc+yH0/5oHPaMzrqpJBMgkOYYIOnN7L3e
        ks6E/a8JGzX5R9aoQ5vftEY+a8+cw2W2t96MsBd0QmufNgOCaM5yomH2ytu2J9E9Ujuu8pIW1zM/tMcu
        n5av8aGUUXtfNJxOMCCZzY4Xl+asgGYEGrpBlp86KP66GjJWaNih3ZIzrmqBfM2e6rMt5O1tRqFhWjPF
        BAikOQLkj0Z9zR1f96r+vebyaWZvo1GHlg6w/A0+t/69/WRlsbcZhYaU+I4ZEEZzlvfQah/JT/0SEX9X
        zfjqV3xvBOP2vUxQ5C/xifzW64eG2RMaprKnzIAgmiNAPs0INFy5dEkzNUllHyhxoNHf7bLrl875uFTq
        0GqSy56jkXTKGJ0AQCDNWWY0A/vcqV/Swttlb6Ph9lKlk82AIJrjgNzNRNGodzuGxtFM1Dvw3S4WGiEj
        IIzmLG8zQWjMnztdaJS969Da9jaaxNWTSEGAAJojQF407mYkGk8z7s+dvmikvQ8aTmcVkwkQSHOWtPdF
        49MM99bsNW9mb25GoOF0ElZlJazMMgPyoolDc5b0Zvb30Ex/0DB7iSaRo0lYmZnwdqYREEZzHJBAozfT
        PzTKvh+H1oFG0klYnpE8M10Q0UaiUfHi1JxV0rzDg2aAh9Zpr9Aoe8ehFc1INKQVGeHi9JTZ4wQRbUCa
        s3p7e8ta947YnuePRrPXvJ1ovM14Dq0DDaMTKk5PmvF4av54QUQbkOasq1evEqNLly5FIpGenp5z586d
        OXOmu7u7q6vr+PHjnZ2dHR0d7e3tra2tzc3NTU1NjY2NDQ0N9fX1FRUVoYmPDFgZI0OZI0OTRg+ZOiZp
        +tjkWempBRMEEW1AmrNEGsABaQ4XEMgMAooxg4BizCCgGDMIKMYMAooxg4BiDO7OKspKJuzOKspKJuzO
        KspKJgtx7wmiIQb2HwuTzTurIMFwd1ZBgiHvrEIEw95ZBQgGvLOKEQx3ZxUkGPLOKkQw4J1VjGDQO6sI
        wXB3VkGCge+sxj8Y8M4qRjDonVWEYLg7qyDBgHdWMYIh76xCBMPdWQUJhryzChEMeWcVIhjuzipIMPCd
        1fgHA95ZxQiGvLMKEQx3ZxUkGPLOKkQw6J1VhGC4O6sgwYB3VjGCIe+sQgTD3VkFCYa8swoRDHhnFSMY
        9s4qQDDcnVWQYMg7qxDBgHdWMYIB76xiBMPeWQUIhruzirKSCbuzirKSCbuzChHszp3/AT1HzRT6P4XE
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>